name: Device Blobs Extraction

on:
  workflow_dispatch:
    inputs:
      DEVICE_BRANCH:
        description: "Device tree's branch"
        required: true
      VENDOR_BRANCH:
        description: "Vendor tree's branch"
        required: true
      STARTING_HASH:
        description: 'Commit hash to start processing from (optional)'
        required: false
      SIGN_COMMITS:
        description: 'Enable GPG signing for commits'
        default: 'false'
        required: false

jobs:
  Extract-Sync:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
      - name: Cleanup Workspace
        run: rm -rf ${{ github.workspace }}/*

      - name: Set up Git credentials
        run: |
          git config --global user.name "dogpoopy"
          git config --global user.email "dogpoopy.git@gmail.com"

      - name: Set up SSH Key for GPG Signing (Optional)
        if: ${{ inputs.SIGN_COMMITS == 'true' }}
        run: |
          echo "${{ secrets.SSH_PUBKEY }}" > $HOME/.ssh/key.pub
          chmod 400 $HOME/.ssh/key.pub
          git config --global user.signingkey "$HOME/.ssh/key.pub"
          git config --global gpg.format ssh
          git config --global commit.gpgsign true

      - name: Download stripped clang and jdk21
        run: |
          git clone --depth 1 --single-branch -b main https://gitlab.com/dogpoopy/blobs_extractor.git .
          rm -rf .git
          
      - name: Clone Extraction Utilities
        run: |
          git clone --depth=1 -b lineage-22.0 https://github.com/LineageOS/android_prebuilts_extract-tools.git prebuilts/extract-tools
          git clone --depth=1 -b lineage-22.0 https://github.com/LineageOS/android_tools_extract-utils.git tools/extract-utils

      - name: Clone Device, Vendor, and Dump
        run: |
          git clone https://github.com/aosp-realm/android_device_xiaomi_apollo -b ${{ github.event.inputs.DEVICE_BRANCH }} device/xiaomi/apollo
          git clone https://github.com/aosp-realm/android_vendor_xiaomi_apollo -b ${{ github.event.inputs.VENDOR_BRANCH }} vendor/xiaomi/apollo
          git clone --depth 1 --single-branch https://gitlab.com/dogpoopy/apollo_dump_V14.0.4.0.SJDMIXM.git dump
          
      - name: Set Commit Range Starting from User-Specified Commit
        id: set_commit_range
        run: |
          cd device/xiaomi/apollo
          if [ -n "${{ github.event.inputs.STARTING_HASH }}" ]; then
            commit_range="${{ github.event.inputs.STARTING_HASH }}..HEAD"
          else
            commit_range="HEAD"
          fi
          echo "commit_range=$commit_range" >> $GITHUB_ENV

      - name: Process and Commit Changes
        run: |
          process_commit() {
            commit_hash=$1
            bash extract-files.sh ${{ github.workspace }}/dump
            cd ${{ github.workspace }}/vendor/xiaomi/apollo
            if [ -n "$(git status --porcelain)" ]; then
              commit_message=$(cd ${{ github.workspace }}/device/xiaomi/apollo && git log -1 --format=%B $commit_hash)
              commit_author=$(cd ${{ github.workspace }}/device/xiaomi/apollo && git log -1 --format="%an <%ae>" $commit_hash)
              commit_date=$(cd ${{ github.workspace }}/device/xiaomi/apollo && git log -1 --format=%ci $commit_hash)
              export GIT_COMMITTER_DATE="$commit_date"
              git add .
              git commit -m "$commit_message" --author="$commit_author"
            fi
            cd ${{ github.workspace }}/device/xiaomi/apollo
          }

          cd ${{ github.workspace }}/device/xiaomi/apollo
          for commit in $(git rev-list --reverse ${{ env.commit_range }}); do
            if git show --name-only $commit | grep -qE 'extract-files.sh|setup-makefiles.sh|proprietary-files.txt'; then
              git checkout $commit
              process_commit $commit
            fi
          done

      - name: Push Vendor Changes
        run: |
          cd vendor/xiaomi/apollo
          git push "https://x-access-token:${{ secrets.PAT }}@github.com/aosp-realm/android_vendor_xiaomi_apollo.git" ${{ github.event.inputs.VENDOR_BRANCH }}
